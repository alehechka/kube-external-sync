name: Release Tag

on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  push_docker_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Image Tag
        id: image
        run: |
          if [ "${{ github.ref_type }}" = "tag" ]; then
            echo "tag=${{ github.ref_name }}"  >> $GITHUB_OUTPUT
          else
            echo "tag=latest"  >> $GITHUB_OUTPUT
          fi

      - uses: docker/build-push-action@v3
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.image.outputs.tag }}
          platforms: linux/amd64
          build-args: |
            RELEASE_VERSION=${{ steps.image.outputs.tag }}

  upload_helm_charts:
    name: Upload Helm Charts
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Get Chart version
        id: chart
        run: |
          VERSION=${{ github.ref_name }}

          echo "version=${VERSION##*v}"  >> $GITHUB_OUTPUT

      - name: Update versions
        run: |
          yq --inplace '.image.tag = "${{ github.ref_name }}", .image.pullPolicy = "IfNotPresent"' values.yaml
          yq --inplace '.version = "${{ steps.chart.outputs.version }}" | .appVersion = "${{ github.ref_name }}"' Chart.yaml
        working-directory: deploy/helm/kube-external-sync

      - name: Build Template
        run: helm template --namespace kube-external-sync kube-external-sync deploy/helm/kube-external-sync > kube-external-sync.yaml

      - name: Build Package
        run: helm package deploy/helm/kube-external-sync

      - name: Add to release
        run: gh release upload ${{ github.ref_name }} kube-external-sync.yaml kube-external-sync-${{ steps.chart.outputs.version }}.tgz --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add deployment instructions to release
        uses: lockerstock/github-actions/add-release-notes@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Deployment Instructions'
          body: |
            ## Deployment Instructions

            ### Using Helm

            ```shell
            helm upgrade  --install kube-external-sync ${{ github.server_url }}/${{ github.repository }}/releases/download/${{ github.ref_name }}/kube-external-sync-${{ steps.chart.outputs.version }}.tgz
            ```

            ### Using kubectl

            ```shell
            kubectl apply -f ${{ github.server_url }}/${{ github.repository }}/releases/download/${{ github.ref_name }}/kube-external-sync.yaml
            ```
